LINUX COMMANDS- PuTTY 
  
  Steps to open PuTTY and connect to a server
===========================================
1.Open PuTTY – Search for PuTTY and launch it.

2.Enter Server Details – Input the IP address (We connect with 172.16.140.150)

3.Connect – Click Open

4.Login – Enter your username and password (hidden while typing). (Password used: 789*asd)

5.Access Server – Now we can connected to the server!


Linux commands learnt
======================

pwd: The pwd command prints the current working directory
The default directory when you log:
/home/username


1.vi ABC.tsv

Explanation :
vi ABC.tsv opens the file ABC.tsv in the vi editor.
If the file does not exist, a new file is created.
To edit the file, press i (insert mode).
To save and exit, press Esc, type :wq, and press Enter


Output      :
{ Desktop }  » vi ABC.tsv                           /cygdrive/c/Users/ASUS/Desktop

Conclusion  :
This command is used to open, edit, and save text files
using the vi editor.

 

---------------------------------------------------------------------------------
2.more ABC.tsv 

Explanation :
more ABC.tsv displays the content of ABC.tsv page by page.

You can press Enter to scroll line by line or Space to scroll page by page.

Output      :
{ Desktop }  » more ABC.tsv                         /cygdrive/c/Users/ASUS/Desktop

A       1       2       3
B       4       2       5
C       6       2       7
D       5       9       0
E       2       5       1
F       9       4       2
G       0       2       1

Conclusion  :
This command is useful for viewing large files without opening an editor.

----------------------------------------------------------------------------------
3.cut -d $'\t' -f3 ABC.tsv   

Explanation :
cut -d $'\t' -f3 ABC.tsv extracts the 3rd column from ABC.tsv.

-d $'\t' means the file uses a tab (\t) as a separator.

-f3 selects column 3.

Output      :
{ Desktop }  » cut -d $'\t' -f3 ABC.tsv           /cygdrive/c/Users/ASUS/Desktop 1
2
2
2
9
5
4
2

Conclusion  :
This command extracts specific columns from a tab-separated file.
---------------------------------------------------------------------------------


4. head -n2 ABC.tsv    

Explanation :
head -n2 ABC.tsv displays the first 2 lines of the file.

-n2 tells head to show 2 lines only.

Output      :
{ Desktop }  » head -n2 ABC.tsv                 /cygdrive/c/Users/ASUS/Desktop 127
A       1       2       3
B       4       2       5

Conclusion  :
This command helps in quickly checking the beginning of a file.
---------------------------------------------------------------------------------
5.  tail -n2 ABC.tsv 

Explanation :
tail -n2 ABC.tsv shows the last 2 lines of the file.

-n2 tells tail to display 2 lines only.
Output      :
{ Desktop }  » tail -n2 ABC.tsv                     /cygdrive/c/Users/ASUS/Desktop
F       9       4       2
G       0       2       1

Conclusion  :
This command is useful to see the last few lines of a file.


---------------------------------------------------------------------------------
6. head -n4 ABC.tsv | tail -n1  
 
Explanation :
head -n4 ABC.tsv shows the first 4 lines of the file.

tail -n1 picks the last line from those 4 lines, which is line 4.
Output      :
{ Desktop }  » head -n4 ABC.tsv | tail -n1          /cygdrive/c/Users/ASUS/Desktop
D       5       9       0

Conclusion  :
This command extracts a specific line from a file.
---------------------------------------------------------------------------------

7. awk '{print $3}' ABC.tsv  
       
Explanation :
awk '{print $3}' ABC.tsv prints column 3 from each row.

$3 means the third column.

awk processes text line by line and extracts the required column.

Output      :
{ Desktop }  » awk '{print $3}' ABC.tsv             /cygdrive/c/Users/ASUS/Desktop
2
2
2
9
5
4
2

Conclusion  :
This command helps in extracting specific columns from a file.


----------------------------------------------------------------------------------
8. awk  '{print NF ;exit}' ABC.tsv
    
Explanation :
awk '{print NF ;exit}' ABC.tsv prints the number of columns in the first line.

NF (Number of Fields) gives the total number of columns.

exit ensures only the first line is checked.

Output      :
{ Desktop }  » awk  '{print NF ;exit}' ABC.tsv      /cygdrive/c/Users/ASUS/Desktop
4

Conclusion  :
This command helps in finding how many columns a file has.


----------------------------------------------------------------------------------
9. wc -l ABC.tsv 

Explanation :
wc -l ABC.tsv counts the number of lines in the file.

-l stands for line count.

Output      :
{ Desktop }  » wc -l ABC.tsv                        /cygdrive/c/Users/ASUS/Desktop
7 ABC.tsv

Conclusion  :
This command is used to count the total lines in a file.
----------------------------------------------------------------------------------
10. head -n5 ABC.tsv | grep 'C'   

Explanation :
head -n5 ABC.tsv extracts the first 5 lines.

grep 'C' searches for lines containing the letter 'C' in those 5 lines.

Output      :
{ Desktop }  » head -n5 ABC.tsv | grep 'C'          /cygdrive/c/Users/ASUS/Desktop
C       6       2       7

Conclusion  :
This command filters specific lines based on a keyword.
---------------------------------------------------------------------------------
11. awk -F'\t' '{print NF; exit}' ABC.tsv

Explanation :
awk -F'\t' '{print NF; exit}' ABC.tsv finds the number of columns in the first row.

-F'\t' sets tab (\t) as the field separator.

NF gives the total number of columns in that row.

Output      :
{ Desktop }  » awk -F'\t' '{print NF; exit}' ABC.tsv
4

Conclusion  :
This command is useful for checking the number of columns in a tab-separated file.




